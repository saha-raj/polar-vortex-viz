name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# These permissions are needed to interact with GitHub's API and deploy to Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create initial .nojekyll files
        run: |
          # Create public directory and .nojekyll file
          mkdir -p public
          touch public/.nojekyll
          
          # Create dist directory and .nojekyll files
          mkdir -p dist
          mkdir -p dist/public
          touch dist/.nojekyll
          touch dist/public/.nojekyll
          
          echo "Initial .nojekyll files created:"
          ls -la public/.nojekyll
          ls -la dist/.nojekyll
          ls -la dist/public/.nojekyll
      
      - name: Build
        run: npm run build
        
      - name: Manual final check for .nojekyll files
        run: |
          echo "Final verification of .nojekyll files:"
          # Create .nojekyll files directly again to be absolutely sure
          echo "" > dist/.nojekyll
          echo "" > dist/public/.nojekyll
          
          # List files to confirm
          ls -la dist/.nojekyll
          ls -la dist/public/.nojekyll
          
          # Find all .nojekyll files in dist
          find dist -name ".nojekyll" | sort
      
      - name: Debug build directories
        run: |
          echo "=== Files in dist root ==="
          ls -la dist/
          
          echo "=== Files in dist/public ==="
          ls -la dist/public/
          
          echo "=== Find all .nojekyll files ==="
          find . -name ".nojekyll"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 